# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: request.proto

require 'google/protobuf'


descriptor_data = "\n\rrequest.proto\x12\x07request\"o\n\x0cHelloRequest\x12\x0b\n\x03msg\x18\x01 \x01(\t\x12$\n\x05inner\x18\x02 \x01(\x0b\x32\x15.request.InnerRequest\x12\t\n\x01n\x18\x03 \x01(\x03\x12!\n\x05ptype\x18\x04 \x01(\x0e\x32\x12.request.PhoneType\"I\n\x0cInnerRequest\x12\x0b\n\x03msg\x18\x01 \x01(\t\x12\t\n\x01n\x18\x02 \x01(\x03\x12!\n\x05ptype\x18\x03 \x01(\x0e\x32\x12.request.PhoneType\"\x1c\n\rHelloResponse\x12\x0b\n\x03msg\x18\x01 \x01(\t\"!\n\x12HelloStreamRequest\x12\x0b\n\x03msg\x18\x01 \x01(\t\"\"\n\x13HelloStreamResponse\x12\x0b\n\x03msg\x18\x01 \x01(\t*+\n\tPhoneType\x12\n\n\x06MOBILE\x10\x00\x12\x08\n\x04HOME\x10\x01\x12\x08\n\x04WORK\x10\x02\x32\xaf\x02\n\x07request\x12\x38\n\x05Hello\x12\x15.request.HelloRequest\x1a\x16.request.HelloResponse\"\x00\x12L\n\x11HelloServerStream\x12\x15.request.HelloRequest\x1a\x1c.request.HelloStreamResponse\"\x00\x30\x01\x12L\n\x11HelloClientStream\x12\x1b.request.HelloStreamRequest\x1a\x16.request.HelloResponse\"\x00(\x01\x12N\n\x0bHelloStream\x12\x1b.request.HelloStreamRequest\x1a\x1c.request.HelloStreamResponse\"\x00(\x01\x30\x01\x62\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool
pool.add_serialized_file(descriptor_data)

module Request
  HelloRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("request.HelloRequest").msgclass
  InnerRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("request.InnerRequest").msgclass
  HelloResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("request.HelloResponse").msgclass
  HelloStreamRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("request.HelloStreamRequest").msgclass
  HelloStreamResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("request.HelloStreamResponse").msgclass
  PhoneType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("request.PhoneType").enummodule
end
